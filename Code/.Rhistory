"Difenoconazole" =                    "#3C362A",
"Fenpropidin" =                       "#FF9896",
"Azoxystrobin" =                      "#ACBED8"
)
theme_top5 <- theme(aspect.ratio = 0.3,
strip.text.x = element_text(size = 15,face = 'bold', family = "Times New Roman"),
strip.text.y = element_text(size = 15,face = 'bold', family = "Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "black", size = 0.5),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
strip.background = element_rect(fill = "#EEEEEE", color = "black", linewidth = 1.5, linetype = "solid"),
axis.title.y = element_text(size = 22, family = "Times New Roman"),
axis.title.x = element_text(size = 22, family = "Times New Roman"),
axis.text.y = element_text(colour = "black", size = 17, family = "Times New Roman"),
axis.text.x = element_text(colour = "black", size = 17, family = "Times New Roman"),
legend.text = element_text(size = 12, family = "Times New Roman"),
legend.key.size = unit(0.4, "cm"),
legend.title = element_blank(),
title = element_text(size = 25, face = 'bold', family = "Times New Roman"))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals"),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals")
View(industrial)
View(pollutants_count)
View(pollutants_count)
View(top5_fin)
pollutants_count_complete <- pollutants_count %>%
filter(Classification == "Industrial Chemicals") %>%
complete(Date, Estuary, Layer, fill = list(Count = NA))
View(pollutants_count_complete)
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count_complete,
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
theme_top5 <- theme(aspect.ratio = 0.3,
strip.text.x = element_text(size = 15,face = 'bold', family = "Times New Roman"),
strip.text.y = element_text(size = 15,face = 'bold', family = "Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "black", size = 0.5),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
strip.background = element_rect(fill = "#EEEEEE", color = "black", linewidth = 1.5, linetype = "solid"),
axis.title.y = element_text(size = 22, family = "Times New Roman"),
axis.title.x = element_text(size = 22, family = "Times New Roman"),
axis.text.y = element_text(colour = "black", size = 17, family = "Times New Roman"),
axis.text.x = element_text(colour = "black", size = 17, family = "Times New Roman"),
legend.text = element_text(size = 12, family = "Times New Roman"),
legend.key.size = unit(0.55, "cm"),
legend.title = element_blank(),
title = element_text(size = 25, face = 'bold', family = "Times New Roman"))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
getwd()
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/ind_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
theme_top5 <- theme(aspect.ratio = 0.3,
strip.text.x = element_text(size = 15,face = 'bold', family = "Times New Roman"),
strip.text.y = element_text(size = 15,face = 'bold', family = "Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "black", size = 0.5),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
strip.background = element_rect(fill = "#EEEEEE", color = "black", linewidth = 1.5, linetype = "solid"),
axis.title.y = element_text(size = 22, family = "Times New Roman"),
axis.title.x = element_text(size = 22, family = "Times New Roman"),
axis.text.y = element_text(colour = "black", size = 17, family = "Times New Roman"),
axis.text.x = element_text(colour = "black", size = 17, family = "Times New Roman"),
legend.text = element_text(size = 12, family = "Times New Roman"),
legend.key.size = unit(0.65, "cm"),
legend.title = element_blank(),
title = element_text(size = 25, face = 'bold', family = "Times New Roman"))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/ind_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
theme_top5 <- theme(aspect.ratio = 0.3,
strip.text.x = element_text(size = 15,face = 'bold', family = "Times New Roman"),
strip.text.y = element_text(size = 15,face = 'bold', family = "Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "black", size = 0.5),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
strip.background = element_rect(fill = "#EEEEEE", color = "black", linewidth = 1.5, linetype = "solid"),
axis.title.y = element_text(size = 22, family = "Times New Roman"),
axis.title.x = element_text(size = 22, family = "Times New Roman"),
axis.text.y = element_text(colour = "black", size = 17, family = "Times New Roman"),
axis.text.x = element_text(colour = "black", size = 17, family = "Times New Roman"),
legend.text = element_text(size = 12, family = "Times New Roman"),
legend.key.size = unit(0.9, "cm"),
legend.title = element_blank(),
title = element_text(size = 25, face = 'bold', family = "Times New Roman"))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/ind_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
theme_top5 <- theme(aspect.ratio = 0.3,
strip.text.x = element_text(size = 15,face = 'bold', family = "Times New Roman"),
strip.text.y = element_text(size = 15,face = 'bold', family = "Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "black", size = 0.5),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
strip.background = element_rect(fill = "#EEEEEE", color = "black", linewidth = 1.5, linetype = "solid"),
axis.title.y = element_text(size = 22, family = "Times New Roman"),
axis.title.x = element_text(size = 22, family = "Times New Roman"),
axis.text.y = element_text(colour = "black", size = 17, family = "Times New Roman"),
axis.text.x = element_text(colour = "black", size = 17, family = "Times New Roman"),
legend.text = element_text(size = 12, family = "Times New Roman"),
legend.key.size = unit(0.65, "cm"),
legend.title = element_blank(),
title = element_text(size = 25, face = 'bold', family = "Times New Roman"))
(industrial <- top5_fin %>%
filter(Classification %in% "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Industrial Chemicals",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = industral_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/ind_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
(PPCP <- top5_fin %>%
filter(Classification %in% "PPCP") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "PPCP",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = ppcp_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
(PPCP <- top5_fin %>%
filter(Classification %in% "PPCP") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "PPCP",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = ppcp_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/ppcp_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
(Pesticides <- top5_fin %>%
filter(Classification %in% "Pesticides") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Pesticides",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = pesticides_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/pest_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
(Pesticides <- top5_fin %>%
filter(Classification %in% "Pesticides") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Pesticides",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = pesticides_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 2)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/pest_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
(Pesticides <- top5_fin %>%
filter(Classification %in% "Pesticides") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
#geom_bar(colour = "black", width = 14, stat = "identity", size = 0.3, position = "stack") +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
geom_text(data = pollutants_count %>%
filter(Classification == "Pesticides",
Station %in% wc_station),
aes(x = Date, y = 1.1, label = Count),  # y = 1 for a fixed position
size = 4, vjust = 0.6, inherit.aes = FALSE)+
facet_grid(Layer ~ Estuary)+
scale_fill_manual(values = pesticides_palette)+
labs(y = element_blank(),
x = element_blank()) +
theme_top5 +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_x_date(date_breaks = "1 month", date_labels = "%b")+
guides(fill = guide_legend(ncol = 1)))
ggsave("C:/Users/owner/OneDrive - huji.ac.il/PhD/Thesis_results/results_2/top5new/pest_top5new.png", plot = last_plot(), dpi = 300, width = 20, height = 11)
complete_grid <- expand_grid(
Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Pollutant = "ND",  # Placeholder
Classification = "Industrial Chemicals"  # To match your filter
)
View(complete_grid)
missing_slots <- anti_join(complete_grid, top5_fin, by = c("Date", "Estuary", "Layer"))
View(missing_slots)
missing_slots <- missing_slots %>%
mutate(concentration = 1e-6)
View(missing_slots)
top5_fin_augmented <- bind_rows(top5_fin, missing_slots)
View(top5_fin_augmented)
View(missing_slots)
industral_palette["ND"] <- "grey70"
geom_text(
data = missing_slots,
aes(x = Date, y = 1.05, label = "ND"),  # Adjust y
inherit.aes = FALSE,
size = 4, vjust = 0.5
)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer)
)
# Step 2: Find which facet combinations have no data for Industrial Chemicals
existing <- top5_fin %>%
filter(Classification == "Industrial Chemicals") %>%
distinct(Date, Estuary, Layer)
# Step 2: Find which facet combinations have no data for Industrial Chemicals
existing <- top5_fin %>%
filter(Classification == "Industrial Chemicals") %>%
distinct(Date, Estuary, Layer)
missing <- anti_join(all_combos, existing, by = c("Date", "Estuary", "Layer"))
# Step 3: Create dummy rows with "ND"
nd_rows <- missing %>%
mutate(
Pollutant = "ND",
Classification = "Industrial Chemicals",
concentration = 1e-6  # Tiny non-zero value
)
top5_fin_nd <- bind_rows(top5_fin, nd_rows)
industral_palette["ND"] <- "grey70"
industrial <- top5_fin_nd %>%
filter(Classification == "Industrial Chemicals") %>%
ggplot(aes(x = Date, y = concentration, fill = Pollutant, group = Pollutant)) +
geom_col(colour = "black", width = 12, size = 1, position = "fill") +
# Count labels
geom_text(
data = pollutants_count %>% filter(Classification == "Industrial Chemicals"),
aes(x = Date, y = 1.1, label = Count),
size = 4, vjust = 0.6, inherit.aes = FALSE
) +
# ND labels only on dummy bars
geom_text(
data = nd_rows,
aes(x = Date, y = 1.05, label = "ND"),
inherit.aes = FALSE,
size = 4, vjust = 0.5
) +
facet_grid(Layer ~ Estuary) +
scale_fill_manual(values = industral_palette) +
labs(y = element_blank(), x = element_blank()) +
theme_top5 +
scale_y_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0%", "25%", "50%", "75%", "100%")
) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
coord_cartesian(clip = "off") +  # Allow text outside panel
guides(fill = guide_legend(ncol = 1))
industrial
View(all_combos)
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
View(all_combos)
# Step 2: Find which facet combinations have no data
existing <- top5_fin %>%
filter(Classification == "Industrial Chemicals") %>%
distinct(Date, Estuary, Layer)
View(existing)
# Step 2: Find which facet combinations have no data
existing <- top5_fin %>%
distinct(Date, Estuary, Layer)
View(existing)
# Step 2: Find which facet combinations have no data
existing <- top5_fin %>%
distinct(Date, Estuary, Layer, Classification)
missing <- anti_join(all_combos, existing, by = c("Date", "Estuary", "Layer", "Classification"))
missing <- anti_join(all_combos, existing, by = c("Date", "Estuary", "Layer", "Classification"))
missing
View(missing)
missing <- anti_join(all_combos, existing, by = c("Date", "Estuary", "Layer"))
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
# Step 2: Find which facet combinations have no data
existing <- top5_fin %>%
distinct(Date, Estuary, Layer, Classification)
View(existing)
missing <- anti_join(all_combos, existing, by = c("Date", "Estuary", "Layer"))
?expand_grid
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
# Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
#Date = unique(top5_fin$Date),
Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
#Estuary = unique(top5_fin$Estuary),
#Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
) %>%
# Step 2: Find which facet combinations have no data
existing <- top5_fin %>%
distinct(Date, Estuary, Layer, Classification)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
#Estuary = unique(top5_fin$Estuary),
#Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
# Step 1: Get all expected facet combinations
all_combos <- expand_grid(
Date = unique(top5_fin$Date),
#Estuary = unique(top5_fin$Estuary),
Layer = unique(top5_fin$Layer),
Classification = unique(top5_fin$Classification)
)
View(all_combos)
missing <- anti_join(all_combos, existing, by = c("Date"))
missing <- anti_join(all_combos, existing)
View(missing)
View(missing)
nd_rows <- missing %>%
left_join(top5_fin[,3])
nd_rows <- missing %>%
left_join(., top5_fin[,3], by = Date)
nd_rows <- missing %>%
left_join(., top5_fin[,3])
nd_rows <- missing %>%
mutate(
Pollutant = case_when(
Layer == "Sediment" ~ "ND",
TRUE ~ NA_real_
)
)
nd_rows <- missing %>%
mutate(
Pollutant = case_when(
Layer == "Sediment" ~ "ND",
TRUE ~ "NA"
),
concentration = case_when(
Layer == "Sediment" ~ 1e-6,
TRUE ~ NA_real_
)
)
View(nd_rows)
top5_fin_nd <- bind_rows(top5_fin, nd_rows)
View(top5_fin_nd)
