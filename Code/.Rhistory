gsub("-", "", .)
p_final
# Convert the vector to a comma-separated string for the SQL IN clause
cas_list <- paste0("'", p_final, "'", collapse = ", ")
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS ED50_Value,
results.conc1_unit AS ED50_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%ED50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.phylum_division LIKE '%Arthropoda%' -- Filter for Arthropoda
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS ED50_Value,
results.conc1_unit AS ED50_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%ED50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.phylum_division LIKE '%Arthropoda%' -- Filter for Arthropoda
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS ED50_Value,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%ED50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.phylum_division LIKE '%Arthropoda%' -- Filter for Arthropoda
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS ED50_Value,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.phylum_division LIKE '%Arthropoda%' -- Filter for Arthropoda
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS ED50_Value,
results.conc1_unit AS ED50_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.phylum_division LIKE '%Arthropoda%' -- Filter for Arthropoda
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
results.endpoint LIKE '%EC50%' -- Filter for Endpoint = ED50
AND chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.exposure_type AS ExposureType,
tests.study_duration_mean AS StudyDuration,
tests.study_duration_unit AS StudyDurationUnit,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
mysearch <- paste0("SELECT
-- Select the relevant ED50 concentration value and its unit
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
results.endpoint AS Endpoint
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant concentration values its unit and endpopint type
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
results.endpoint AS Endpoint,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.test_id AS TestID,
results.result_id AS ResultID,
-- Additional fields that might be useful for context
results.effect AS Effect,
results.measurement AS Measurement
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
mysearch <- paste0("SELECT
-- Select the relevant endpoint concentration, unit and measurment columns
results.conc1_mean AS Endpoint_Concentration,
results.conc1_unit AS Endpoint_Unit,
results.endpoint AS Endpoint,
results.measurement AS Measurement,
results.effect AS Effect,
-- Select details about the chemical
chemicals.chemical_name AS ChemicalName,
chemicals.cas_number AS CAS_Number,
-- Select details about the organism
species.common_name AS OrganismCommonName,
species.latin_name AS OrganismLatinName,
species.phylum_division AS OrganismPhylum,
species.ecotox_group AS SpeciesGroup,
-- Select details about the test
tests.test_type AS TestType,
tests.test_id AS TestID,
results.result_id AS ResultID
FROM
results -- Start with the results table where ED50 data is found
JOIN
tests ON results.test_id = tests.test_id -- Join to get test details, chemical CAS, and species number
JOIN
chemicals ON tests.test_cas = chemicals.cas_number -- Join to get chemical name from CAS number
JOIN
species ON tests.species_number = species.species_number -- Join to get species phylum/group
WHERE
chemicals.cas_number IN (", cas_list, ") -- Filter for all CAS numbers in p_final vector
AND species.ecotox_group LIKE '%Crustacea%' -- Filter for crustacea
ORDER BY
results.conc1_mean;) -- Order results for easier review")
output <- dbGetQuery(conn, mysearch)
View(output)
